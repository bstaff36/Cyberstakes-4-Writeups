import decimal
import math

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

def cube_root(x):
    return decimal.Decimal(x) ** (decimal.Decimal(1) / decimal.Decimal(3))

def big_exponent(base, exp, mod):
    answer = 1
    while exp > 0:
        if exp % 2 == 0:
            base = (pow(base, 2)) % mod
            exp /= 2
        else:
            answer = (base * answer) % mod
            exp -= 1
    return answer

c = 44431629706061305008143502423137012887277828135988218627924826848164974267369140114151116956542699876402139670467425045450301114213737667412294102131791639564117923536368256828998437520972285622395911648477760804325095186682980015103833775233929473511843707365929109604516730159351999709137396760951561724605394354694071245237933265597444643797363943646984709831864750620734406848781544782140580781553249778510852115417666510789869996230415178275721761766565175907645048897615709905109681846646689243575820894299256876151171950776037745474751371071726067019383683284965811296018491131082246881726583726305095371092727
p = 212691419494563911012016458107764706057027846660556923783295585947349837091530859782385987932959348656441135167812270695168242808938780720834424043119692739636350805618004977676905871536695150965234220710456913491845984031497483010709484108563662345764645393885590662297355667270911004188786194404493930584763
q = 343771555081128227560810773103703230186239929820487041012723599379603845162266648302382922824441150879585264855730391652295840969079127665092831035812274337557171176301884861906361106483559667673320137971212932682795921938761120540964583816300085118595116098901061368547890422579172952819065405212828098113467
e = 102218683034763828584589001371647041187532369615830565599787446410855812507707

totient = (p - 1) * (q - 1)
d = modinv(e, totient)
flag = big_exponent(c, d, p * q)
print(hex(flag))
